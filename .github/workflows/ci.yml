name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on Lua ${{ matrix.lua-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lua-version: ["5.1", "5.2", "5.3", "5.4"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: ${{ matrix.lua-version }}

      - name: Setup LuaRocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Install dependencies
        run: |
          luarocks install busted
          luarocks install luacov
          luarocks install luacheck

      - name: Run tests
        run: |
          busted --verbose --coverage

      - name: Generate coverage report
        run: |
          luacov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./luacov.report.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  test-luajit:
    name: Test on LuaJIT
    runs-on: ubuntu-latest
    continue-on-error: true # Allow LuaJIT to fail without breaking CI

    steps:
      - uses: actions/checkout@v4

      - name: Setup LuaJIT
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "luajit"

      - name: Setup LuaRocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Install dependencies
        run: |
          luarocks install busted || echo "Failed to install busted on LuaJIT"
          luarocks install luacheck || echo "Failed to install luacheck on LuaJIT"

      - name: Run tests
        run: |
          busted --verbose || echo "Tests failed on LuaJIT"

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.4"

      - name: Setup LuaRocks
        uses: leafo/gh-actions-luarocks@v4

      - name: Install luacheck
        run: luarocks install luacheck

      - name: Run luacheck
        run: luacheck src/ --std lua54

  docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.4"

      - name: Install LDoc
        run: |
          if ! command -v luarocks >/dev/null 2>&1; then
            echo "LuaRocks not found. Installing LuaRocks."
            sudo apt-get update
            sudo apt-get install -y luarocks
          fi
          luarocks install ldoc || {
            echo "Failed to install ldoc, trying alternative installation"
            sudo apt-get update
            sudo apt-get install -y lua-doc || echo "Could not install lua-doc"
          }
          if ! command -v ldoc >/dev/null 2>&1; then
            echo "LDoc installation failed. Please check your dependencies."
            exit 1
          fi

      - name: Generate documentation
        run: |
          ldoc -d docs src/ || {
            echo "LDoc generation failed"
            mkdir -p docs
            echo "# Documentation" > docs/index.html
            echo "Documentation generation failed. Please check the logs." >> docs/index.html
          }

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: gh-pages
          force_orphan: true
